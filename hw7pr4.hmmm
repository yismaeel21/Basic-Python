# hw7 problem 4
#
# Name(s): Yusuf Ismaeel
#
# Hmmm...
#
#


# This is a placeholder whose code you'll replace:
00 read  r2             # Get the base of the number and sets to r2
01 setn  r15 42         # Initialize the stack pointer
02 read r1              # Get the power and set it to r1
03 calln r14 7          # Call the factorial function (at line 7)
04 nop                  # space for expansion (or printing)
05 write r13            # Write result to the screen
06 halt                 # All done!

# +++ Power Function +++
# Base Case (lines 7-10)
07 jnezn r1  11         # the base-case test: is the input r1 != 0 ?
08 setn  r13 1          # If r1 is 0, then the return value, r13, is 1
09 nop                  # room for expansion (or printing!)
10 jumpr r14            # Return the value, r13, to the line # in r14

# Recursive Case (lines 11-20)
11 pushr r1  r15        # Save (push) r1 to the stack (at loc. r15)
12 pushr r14 r15        # Save (push) r14 to the stack 
13 addn  r1 -1          # Find N-1 and put it into r1
14 nop                  # room for expansion (or printing)
15 calln r14 7          # Then, ask for factorial of N-1  (Wow!)
16 nop                  # room for expansion (or printing)
17 popr  r14 r15        # Recover (pop) r14 from the stack
18 popr  r1  r15        # Recover (pop) r1 from the stack
19 mul   r13 r2 r13     # Calculate r13 = r2 *r3
20 jumpr r14            # All done! return r13 to the caller at r14


